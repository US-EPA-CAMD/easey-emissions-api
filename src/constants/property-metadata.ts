export const propertyMetadata = {
  co2Mass: {description: 'CO2 mass emissions (short tons)'},
  co2MassMeasureFlg: {description: 'Describes how the CO2 Mass values were determined.'},
  co2Rate: {description: 'Average CO2 hourly emissions rate (short tons/mmBtu)'},
  co2RateMeasureFlg: {description: 'Describes how the CO2 Rate values were determined. '},
  facilityName: {description: 'The name given by the owners and operators to a facility'},
  grossLoad: {description: 'Electrical generation in MW produced by combusting a given heat input of fuel.'},
  heatInput: {description: 'Quantity of heat in mmBtu calculated by multiplying the quantity of fuel by the fuels heat content.'},
  hgControlInfo: {description: 'Method or equipment used by the combustion unit to minimize Hg emissions.'},
  noxControlInfo: {description: 'Method or equipment used by the combustion unit to minimize NOx emissions.'},
  noxMass: {description: 'NOx mass emissions (short tons)'},
  noxMassMeasureFlg: {description: 'Describes how the NOx Mass values were determined. '},
  noxRate: {description: 'The average rate of NOx emissions (lbs/mmBtu)'},
  noxRateMeasureFlg: {description: 'Describes how the NOx Rate values were determined. '},
  countOpTime: {description: 'Number of hours during which the unit operated for this time interval'},
  sumOpTime: {description: 'Sum of operating time for the time interval'},
  date: {description: 'Date on which activity occurred.'},
  beginDate: {description: 'Waiting on "beginDate" description.'},
  endDate: {description: 'Waiting on "endDate" description.'},
  hour: {description: 'Hour in which activity occurred, recorded using local, standard time.'},
  orisCode: {description: 'Waiting on "orisCode" description.'},
  opHoursOnly: {description: 'Waiting on "opHoursOnly" description.'},
  opTime: {description: 'Any part of an hour in which a unit combusts any fuel.'},
  opMonth: {description: 'Waiting on "opMonth" description.'},
  opYear: {description: 'Waiting on "opYear" description.'},
  facilityId: {description: 'The Facility ID code assigned by the Department of Energy\'s Energy Information Administration. The Energy Information Administration Plant ID code is also referred to as the (ORIS code), (ORISPL code), (Facility ID), or (Facility code), among other names. If a Plant ID code has not been assigned by the Department of Energy\'s Energy Information Administration, then plant code means a code beginning with (88) assigned by the EPA\'s Clean Air Markets Division for electronic reporting.'},
  pmControlInfo: {description: 'Method or equipment used by the combustion unit to minimize PM emissions.'},
  primaryFuelInfo: {description: 'The primary type of fuel combusted by the unit.'},
  secondaryFuelInfo: {description: 'The secondary type of fuel combusted by the unit.'},
  steamLoad: {description: 'Rate of steam pressure generated by a unit or source produced by combusting a given heat input of fuel. (1000 lb/hr)'},
  so2ControlInfo: {description: 'Method or equipment used by the combustion unit to minimize SO2 emissions.'},
  so2Mass: {description: 'SO2 Mass Emissions (short tons)'},
  so2MassMeasureFlg: {description: 'Describes how the SO2 Mass values were determined.'},
  so2Rate: {description: 'Average SO2 hourly emissions rate (lbs/mmBtu)'},
  so2RateMeasureFlg: {description: 'Describes how the SO2 Rate values were determined. '},
  state: {description: 'State in which the facility is located.'},
  controlTechnologies: {description: 'Waiting on "controlTechnologies" description.'},
  program: {description: 'Waiting on "program" description.'},
  unitFuelType: {description: 'Waiting on "unitFuelType" description.'},
  unitType: {description: 'Type of unit or boiler.'},
  unitId: {description: 'Unique identifier for each unit at a facility.'}
};
